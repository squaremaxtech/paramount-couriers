@import "tailwindcss";

*,
*::before,
*::after {
  box-sizing: border-box;
  /* border: 1px solid red !important; */
}

:root {
  --c1: #FBB12F;

  /* used with outlines/borders */
  --shade1: #474747;
  --shade2: #e1e1e1;

  /* text colors - can swap */
  --textC1: #686a6f;
  --textC2: #fff;
  /* light/dark swap  */
  --textC3: var(--textC1);
  --textC4: #323232;

  /* used for backgrounds */
  --bg1: #ffffff;
  --bg2: #323232;

  --sizeEEL: 6rem;
  --sizeEL: 4rem;
  --sizeL: 2rem;
  --sizeR: 1rem;
  --sizeS: .7rem;

  --fontSizeTitle: clamp(1rem, 9vw, 7rem);
  --fontSizeL: clamp(1rem, 5vw, 4rem);
  --fontSizeM: 1.5rem;
  --fontSizeR: 1rem;
  --fontSizeS: .7rem;

  --spacingEL: 5rem;
  --spacingL: 2rem;
  --spacingM: 1.3rem;
  --spacingR: 1rem;
  --spacingS: .5rem;
  --spacingES: .3rem;

  --borderRadiusEL: 50%;
  --borderRadiusL: 2rem;
  --borderRadiusR: 1rem;
  --borderRadiusS: 0.5rem;
  --borderRadiusES: 0.2rem;

  --transitionTimeR: 400ms;
  --transitionTimeS: 200ms;
}

html {
  scroll-behavior: smooth;
  width: 100%;
  height: 100%;
}

body {
  height: 100%;
  overflow: auto;
  display: grid;
  align-content: flex-start;
  font-family: var(--alegreya);
  background-color: var(--bg1);
  font-size: var(--fontSizeR);
  color: var(--textC1);
}

li {
  list-style: none;
}

h1 {
  text-transform: capitalize;
  color: var(--textC4);
  font-weight: 700;
  font-size: var(--fontSizeL);
  text-align: center;
}

h2 {
  font-family: var(--rubik);
  color: var(--c1);
  font-size: var(--fontSizeR);
  font-weight: 500;
}

h3 {
  font-size: var(--fontSizeM);
  font-weight: 500;
  text-transform: capitalize;
  color: var(--textC4);
}

h4 {
  text-transform: capitalize;
  color: var(--textC4);
  font-weight: 500;
  font-size: var(--fontSizeM);
  margin-bottom: var(--spacingS);
}

h5 {
  font-family: var(--rubik);
  text-transform: capitalize;
  color: var(--textC4);
  font-weight: 500;
}

p {
  font-family: var(--rubik);
  font-family: var(--rubik);
}

a {
  display: block;
}

section {
  display: grid;
  align-content: flex-start;
  padding: var(--spacingEL);
}

.button1,
.button2,
.button3 {
  cursor: pointer;
  transition: all var(--transitionTimeS) ease;
}

.button1:hover,
.button2:hover,
.button3:hover {
  scale: 1.05;
}

.button1 {
  background-color: var(--c1);
  color: var(--textC2);
  padding: var(--spacingR) var(--spacingM);
  text-transform: capitalize;
  font-weight: 500;
  position: relative;
  z-index: 0;
}

.button1::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  width: 95%;
  height: 80%;
  background-color: color-mix(in hsl, var(--bg2), transparent 70%);
  z-index: -1;
  opacity: 0;
  transform: rotateY(90deg);
  transition: transform var(--transitionTimeR), opacity var(--transitionTimeR);
}

.button1:hover::before {
  transform: rotateY(0deg);
  opacity: 1;
}

.button1:hover {
  /* background-color: var(--c2); */
}

.button2 {
  background-color: var(--shade1);
  color: var(--textC2);
  padding: var(--spacingS);
  text-transform: capitalize;
  font-weight: 500;
  font-size: var(--fontSizeS);
}

.button2:hover {
  background-color: var(--c1);
}

.button3 {}

.button3:hover {}

svg {
  aspect-ratio: 1/1;
  width: var(--sizeR);
  height: var(--sizeR);
  fill: var(--bg1);
}

label {
  font-weight: bold;
  text-transform: capitalize;
}

input,
textarea {
  padding: var(--spacingR);
  background-color: var(--bg1);
  border-radius: var(--borderRadiusS);
  border: 1px solid var(--bg3);
}

input:focus,
textarea:focus {
  border: 1px solid var(--bg1);
  outline: none;
}

input::placeholder,
textarea::placeholder {
  text-transform: capitalize;
}

input[type="checkbox"] {
  cursor: pointer;
}

select {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;

  background-color: var(--bg1);
  border: 1px solid var(--bg1);
  padding: var(--spacingS) var(--spacingR);
  border-radius: var(--borderRadiusS);
  cursor: pointer;
  transition: border var(--transitionTimeS);
}

select:hover {
  border-color: var(--bg1);
}

option {
  background-color: var(--bg1);
}

@media only screen and (max-width: 900px) {
  section {
    padding: var(--spacingEL) var(--spacingR);
  }
}



















/* custom classes */
.material-symbols-outlined {
  font-family: var(--materialSymbolsOutlined);
  font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
}

.material-symbols-rounded {
  font-family: var(--materialSymbolsRounded);
  font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
}

.material-symbols-sharp {
  font-family: var(--materialSymbolsSharp);
  font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
}

.titleText {
  font-size: var(--fontSizeTitle);
  font-weight: 700;
  font-family: var(--alegreya);
  color: var(--textC4);
  max-width: 800px;
}

.tag {
  border: 1px solid var(--c1);
  border-radius: var(--borderRadiusS);
  padding: var(--spacingS) var(--spacingR);
  background-color: var(--bg2);
  font-weight: bold;
  justify-self: flex-start;
}

.highlightText {
  color: var(--c1);
}

.resetTextMargin>p,
.resetTextMargin>h1,
.resetTextMargin>h2,
.resetTextMargin>h3,
.resetTextMargin>h4,
.resetTextMargin>h5 {
  margin: 0;
}

.visibilityCheckbox {
  display: none !important;
}

.visibilityCheckbox:not(:checked)+* {
  display: none;
}

.container {
  display: grid;
  align-content: flex-start;
  gap: var(--spacingR);
}

.flexContainer {
  display: flex;
  align-items: center;
  gap: var(--spacingS);
}

.twoColumnFlex {
  display: flex;
  flex-wrap: wrap;
  gap: var(--spacingR);
}

.twoColumnFlex>*:first-child {
  flex: 1 1 400px;
}

.twoColumnFlex>*:last-child {
  flex: 1 1 400px;
}

.chevron {
  transition: rotate 400ms;
}

.noDisplay {
  display: none !important;
}

.largeIcon {
  font-size: var(--sizeEL);
}

.errorText {
  color: var(--c1);
  font-size: var(--fontSizeS);
}

.snap {
  scroll-snap-type: x mandatory;
}

.snap>* {
  scroll-snap-align: start;
}

.gridColumn {
  display: grid;
  align-content: flex-start;
  grid-auto-flow: column;
  gap: var(--spacingR);
  grid-auto-columns: min(50%, 350px);
  overflow: auto;
}

.card {
  overflow: auto;
  padding: var(--spacingR);
  background-color: var(--c3);
}


.recordTable {
  display: grid;
  align-content: flex-start;
  overflow: auto;
  border-bottom: 1px solid var(--bg3);
  border-right: 1px solid var(--bg3);
}

.recordTable tr {
  display: flex;
  align-items: center;
  padding: var(--spacingS);
  border-top: 1px solid var(--bg3);
  border-left: 1px solid var(--bg3);
}

.recordTable tr:has(th) {
  background-color: var(--shade1);
  text-transform: capitalize;
  white-space: nowrap;
}

.recordTable tr:not(:has(th)):hover,
.recordTable tr.selected {
  background-color: hsl(from var(--c5) h s calc(l * 1.6));
}

.recordTable th:not(.noBorder) {
  border-left: 1px solid var(--bg3);
}

.recordTable td {
  overflow: auto;
}

.recordTable th,
.recordTable td {
  flex: 0 0 200px;
  display: grid;
  align-content: flex-start;
  justify-items: flex-start;
  padding: var(--spacingS);
}

.recordTable th.center,
.recordTable td.center {
  justify-items: center !important;
}

.recordTable th.larger,
.recordTable td.larger {
  flex-basis: 220px;
}

.recordTable th.smaller,
.recordTable td.smaller {
  flex: 0 0 50px;
}

.titleBox {
  border: 1px solid var(--bg2);
  display: grid;
  align-content: flex-start;
  box-shadow: 2px -2px 2px 1px var(--bg2);
  padding: var(--spacingR);
  border-radius: var(--borderRadiusR);
}

.titleBox>*:first-child:not(.ignoreTitleBoxStyle) {
  color: var(--c1);
  text-transform: capitalize;
  font-weight: bold;
}

.popoutText {
  font-weight: bold;
  color: var(--c1);
  text-transform: capitalize;
}