@import "tailwindcss";

*,
*::before,
*::after {
  box-sizing: border-box;
  /* border: 1px solid red !important; */
}

:root {
  /* --c1: #e11d48; */
  --c1: #ff2525;
  --c2: #c1121f;
  --c3: #fdf0d5;
  --c4: #003049;
  --c5: #669bbc;

  --shade1: #fafafb;

  --textC1: #0f0f0f;
  --textC2: #fff;
  --textC3: #9e9e9e;

  --bg1: #ffffff;
  --bg2: #f0f2f5;
  --bg3: #333333;

  --sizeEL: 2rem;
  --sizeL: 1.5rem;
  --sizeR: 1rem;
  --sizeS: .7rem;

  --fontSizeTitle: 5rem;
  --fontSizeEL: 2.5rem;
  --fontSizeL: 2rem;
  --fontSizeM: 1.3rem;
  --fontSizeR: 1rem;
  --fontSizeS: .7rem;

  --spacingEL: 5rem;
  --spacingL: 2rem;
  --spacingM: 1.3rem;
  --spacingR: 1rem;
  --spacingS: .5rem;
  --spacingES: .3rem;

  --borderRadiusEL: 50%;
  --borderRadiusL: 2rem;
  --borderRadiusR: 1rem;
  --borderRadiusS: 0.5rem;
  --borderRadiusES: 0.2rem;

  --transitionTimeR: 400ms;
  --transitionTimeS: 200ms;
}

html {
  scroll-behavior: smooth;
  width: 100%;
  height: 100%;
}

body {
  height: 100%;
  overflow: auto;
  display: grid;
  align-content: stretch;
  background-color: var(--bg1);
  color: var(--textC1);
  font-family: var(--roboto);
}

li {
  list-style: none;
}

h1 {
  font-family: var(--rubik);
  font-size: var(--fontSizeM);
  font-weight: 500;
  margin-bottom: var(--spacingM);
  color: var(--textC3);
  text-transform: capitalize;
}

h2 {
  font-family: var(--raleway);
  font-size: var(--fontSizeL);
  font-weight: 700;
  margin-bottom: var(--spacingR);
  color: var(--c1);
}

h3 {
  font-family: var(--rubik);
  font-size: var(--fontSizeR);
  font-weight: 500;
  margin-bottom: 0.5rem;
  color: var(--textC1);
  text-transform: uppercase;
}

p {
  font-family: var(--rubik);
  font-size: var(--fontSizeR);
  margin-bottom: 1rem;
  max-width: 60ch;
}

main {
  display: grid;
  align-content: flex-start;
  gap: var(--spacingR);
  padding: var(--spacingR);
}

.button1,
.button2,
.button3 {
  cursor: pointer;
  transition: all var(--transitionTimeS) ease;
}

.button1 {
  display: block;
  background-color: var(--c1);
  color: var(--textC2);
  transform: skew(160deg);
  padding: var(--spacingS) var(--spacingR);
  border-radius: var(--borderRadiusES);
  text-transform: uppercase;
  font-weight: 700;
  margin-left: var(--spacingS);
}

.button1:hover {
  background-color: var(--c2);
}

.button2 {
  background-color: var(--c3);
  color: var(--textC1);
  padding: var(--spacingS);
}

.button2:hover {
  background-color: var(--c3);
}

.button3 {
  display: flex;
  gap: var(--spacingS);
  flex-wrap: wrap;
  padding: var(--spacingS) var(--spacingR);
  border: 1px solid var(--c4);
  background-color: var(--bg1);
  border-radius: var(--borderRadiusL);
  font-size: var(--fontSizeS);
  color: var(--textC1);
}

.button3:hover {
  border: 1px solid var(--bg1);
  background-color: var(--c4);
  color: var(--textC2)
}

svg {
  aspect-ratio: 1/1;
  width: var(--sizeR);
}

section,
.container {
  display: grid;
  align-content: flex-start;
  gap: var(--spacingR);
}

label {
  font-weight: bold;
  text-transform: capitalize;
}

input,
textarea {
  padding: var(--spacingR);
  background-color: var(--bg1);
  border-radius: var(--borderRadiusS);
  border: 1px solid var(--bg3);
}

input:focus,
textarea:focus {
  border: 1px solid var(--bg1);
  outline: none;
}

input::placeholder,
textarea::placeholder {
  text-transform: capitalize;
}

input[type="checkbox"] {
  cursor: pointer;
}

/* custom classes */
.material-symbols-outlined {
  font-family: var(--materialSymbolsOutlined);
  font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
}

.material-symbols-rounded {
  font-family: var(--materialSymbolsRounded);
  font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
}

.material-symbols-sharp {
  font-family: var(--materialSymbolsSharp);
  font-variation-settings: 'FILL' 0, 'wght' 400, 'GRAD' 0, 'opsz' 24;
}

.resetTextMargin>p,
.resetTextMargin>h1,
.resetTextMargin>h2,
.resetTextMargin>h3,
.resetTextMargin>h4,
.resetTextMargin>h5 {
  margin: 0;
}

.visibilityCheckbox:not(:checked)+* {
  display: none;
}

.chevron {
  transition: rotate 400ms;
}

.noDisplay {
  display: none !important;
}

.largeIcon {
  font-size: var(--sizeL);
}

.errorText {
  color: var(--c1);
  font-size: var(--fontSizeS);
}

.snap {
  scroll-snap-type: x mandatory;
}

.snap>* {
  scroll-snap-align: start;
}

.gridColumn {
  display: grid;
  align-content: flex-start;
  grid-auto-flow: column;
  gap: var(--spacingR);
  grid-auto-columns: min(50%, 350px);
  overflow: auto;
}

.card {
  overflow: auto;
  padding: var(--spacingR);
  background-color: var(--c3);
}


.recordTable {
  display: grid;
  align-content: flex-start;
  overflow: auto;
  border-bottom: 1px solid var(--bg3);
  border-right: 1px solid var(--bg3);
}

.recordTable tr {
  display: flex;
  align-items: center;
  padding: var(--spacingS);
  border-top: 1px solid var(--bg3);
  border-left: 1px solid var(--bg3);
}

.recordTable tr:has(th) {
  background-color: var(--shade1);
  text-transform: capitalize;
  white-space: nowrap;
}

.recordTable tr:not(:has(th)):hover,
.recordTable tr.selected {
  background-color: hsl(from var(--c5) h s calc(l * 1.6));
}

.recordTable th:not(.noBorder) {
  border-left: 1px solid var(--bg3);
}

.recordTable td {
  overflow: auto;
}

.recordTable th,
.recordTable td {
  flex: 0 0 200px;
  display: grid;
  align-content: flex-start;
  justify-items: flex-start;
  padding: var(--spacingS);
}

.recordTable th.center,
.recordTable td.center {
  justify-items: center !important;
}

.recordTable th.larger,
.recordTable td.larger {
  flex-basis: 220px;
}

.recordTable th.smaller,
.recordTable td.smaller {
  flex: 0 0 50px;
}